{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://127.0.0.1:8000\";\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"access_token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle token refresh\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem(\"refresh_token\");\n      if (refreshToken) {\n        const response = await axios.post(`${API_BASE_URL}/api/auth/token/refresh/`, {\n          refresh: refreshToken\n        });\n        const {\n          access\n        } = response.data;\n        localStorage.setItem(\"access_token\", access);\n        originalRequest.headers.Authorization = `Bearer ${access}`;\n        return api(originalRequest);\n      }\n    } catch (refreshError) {\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"refresh_token\");\n      window.location.href = \"/login\";\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Authentication API\nexport const authAPI = {\n  login: credentials => api.post(\"/api/auth/login/\", credentials),\n  register: userData => api.post(\"/api/auth/register/\", userData),\n  logout: refreshToken => api.post(\"/api/auth/logout/\", {\n    refresh: refreshToken\n  }),\n  getProfile: () => api.get(\"/api/auth/profile/\"),\n  updateProfile: userData => api.put(\"/api/auth/profile/\", userData),\n  changePassword: passwordData => api.post(\"/api/auth/change-password/\", passwordData),\n  refreshToken: refreshToken => api.post(\"/api/auth/token/refresh/\", {\n    refresh: refreshToken\n  }),\n  listUsers: () => api.get(\"/api/auth/users/\")\n};\n\n// Courses API\nexport const coursesAPI = {\n  list: params => api.get(\"/api/courses/\", {\n    params\n  }),\n  create: courseData => api.post(\"/api/courses/\", courseData),\n  get: id => api.get(`/api/courses/${id}/`),\n  update: (id, courseData) => api.put(`/api/courses/${id}/`, courseData),\n  partialUpdate: (id, courseData) => api.patch(`/api/courses/${id}/`, courseData),\n  delete: id => api.delete(`/api/courses/${id}/`),\n  getStudents: id => api.get(`/api/courses/${id}/students/`),\n  enrollStudent: (id, studentData) => api.post(`/api/courses/${id}/enroll/`, studentData),\n  unenrollStudent: (id, studentData) => api.post(`/api/courses/${id}/unenroll/`, studentData),\n  activate: id => api.post(`/api/courses/${id}/activate/`),\n  deactivate: id => api.post(`/api/courses/${id}/deactivate/`),\n  listActive: params => api.get(\"/api/courses/active/\", {\n    params\n  }),\n  getAllCourses: () => api.get(\"/api/courses/\")\n};\n\n// Students API\nexport const studentsAPI = {\n  list: params => api.get(\"/api/students/\", {\n    params\n  }),\n  create: studentData => api.post(\"/api/students/\", studentData),\n  get: id => api.get(`/api/students/${id}/`),\n  update: (id, studentData) => api.put(`/api/students/${id}/`, studentData),\n  partialUpdate: (id, studentData) => api.patch(`/api/students/${id}/`, studentData),\n  delete: id => api.delete(`/api/students/${id}/`),\n  getCourseDetails: id => api.get(`/api/students/${id}/course-details/`),\n  changeStatus: (id, statusData) => api.post(`/api/students/${id}/change-status/`, statusData),\n  changeCourse: (id, courseData) => api.post(`/api/students/${id}/change-course/`, courseData),\n  listByCourse: params => api.get(\"/api/students/by-course/\", {\n    params\n  }),\n  listActive: params => api.get(\"/api/students/active/\", {\n    params\n  }),\n  getMyProfile: () => api.get(\"/api/students/my-profile/\"),\n  getProfile: () => api.get(\"/api/students/my-profile/\"),\n  enrollInCourse: courseId => api.post(`/api/courses/${courseId}/enroll/`, {}),\n  getAllStudents: () => api.get(\"/api/students/\")\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","originalRequest","status","_retry","refreshToken","post","refresh","access","data","setItem","refreshError","removeItem","window","location","href","authAPI","login","credentials","register","userData","logout","getProfile","get","updateProfile","put","changePassword","passwordData","listUsers","coursesAPI","list","params","courseData","id","update","partialUpdate","patch","delete","getStudents","enrollStudent","studentData","unenrollStudent","activate","deactivate","listActive","getAllCourses","studentsAPI","getCourseDetails","changeStatus","statusData","changeCourse","listByCourse","getMyProfile","enrollInCourse","courseId","getAllStudents"],"sources":["D:/Projects/SCIQUS Project/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_BASE_URL = \"http://127.0.0.1:8000\";\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"access_token\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle token refresh\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n\r\n      try {\r\n        const refreshToken = localStorage.getItem(\"refresh_token\");\r\n        if (refreshToken) {\r\n          const response = await axios.post(\r\n            `${API_BASE_URL}/api/auth/token/refresh/`,\r\n            {\r\n              refresh: refreshToken,\r\n            }\r\n          );\r\n\r\n          const { access } = response.data;\r\n          localStorage.setItem(\"access_token\", access);\r\n\r\n          originalRequest.headers.Authorization = `Bearer ${access}`;\r\n          return api(originalRequest);\r\n        }\r\n      } catch (refreshError) {\r\n        localStorage.removeItem(\"access_token\");\r\n        localStorage.removeItem(\"refresh_token\");\r\n        window.location.href = \"/login\";\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Authentication API\r\nexport const authAPI = {\r\n  login: (credentials) => api.post(\"/api/auth/login/\", credentials),\r\n  register: (userData) => api.post(\"/api/auth/register/\", userData),\r\n  logout: (refreshToken) =>\r\n    api.post(\"/api/auth/logout/\", { refresh: refreshToken }),\r\n  getProfile: () => api.get(\"/api/auth/profile/\"),\r\n  updateProfile: (userData) => api.put(\"/api/auth/profile/\", userData),\r\n  changePassword: (passwordData) =>\r\n    api.post(\"/api/auth/change-password/\", passwordData),\r\n  refreshToken: (refreshToken) =>\r\n    api.post(\"/api/auth/token/refresh/\", { refresh: refreshToken }),\r\n  listUsers: () => api.get(\"/api/auth/users/\"),\r\n};\r\n\r\n// Courses API\r\nexport const coursesAPI = {\r\n  list: (params) => api.get(\"/api/courses/\", { params }),\r\n  create: (courseData) => api.post(\"/api/courses/\", courseData),\r\n  get: (id) => api.get(`/api/courses/${id}/`),\r\n  update: (id, courseData) => api.put(`/api/courses/${id}/`, courseData),\r\n  partialUpdate: (id, courseData) =>\r\n    api.patch(`/api/courses/${id}/`, courseData),\r\n  delete: (id) => api.delete(`/api/courses/${id}/`),\r\n  getStudents: (id) => api.get(`/api/courses/${id}/students/`),\r\n  enrollStudent: (id, studentData) =>\r\n    api.post(`/api/courses/${id}/enroll/`, studentData),\r\n  unenrollStudent: (id, studentData) =>\r\n    api.post(`/api/courses/${id}/unenroll/`, studentData),\r\n  activate: (id) => api.post(`/api/courses/${id}/activate/`),\r\n  deactivate: (id) => api.post(`/api/courses/${id}/deactivate/`),\r\n  listActive: (params) => api.get(\"/api/courses/active/\", { params }),\r\n  getAllCourses: () => api.get(\"/api/courses/\"),\r\n};\r\n\r\n// Students API\r\nexport const studentsAPI = {\r\n  list: (params) => api.get(\"/api/students/\", { params }),\r\n  create: (studentData) => api.post(\"/api/students/\", studentData),\r\n  get: (id) => api.get(`/api/students/${id}/`),\r\n  update: (id, studentData) => api.put(`/api/students/${id}/`, studentData),\r\n  partialUpdate: (id, studentData) =>\r\n    api.patch(`/api/students/${id}/`, studentData),\r\n  delete: (id) => api.delete(`/api/students/${id}/`),\r\n  getCourseDetails: (id) => api.get(`/api/students/${id}/course-details/`),\r\n  changeStatus: (id, statusData) =>\r\n    api.post(`/api/students/${id}/change-status/`, statusData),\r\n  changeCourse: (id, courseData) =>\r\n    api.post(`/api/students/${id}/change-course/`, courseData),\r\n  listByCourse: (params) => api.get(\"/api/students/by-course/\", { params }),\r\n  listActive: (params) => api.get(\"/api/students/active/\", { params }),\r\n  getMyProfile: () => api.get(\"/api/students/my-profile/\"),\r\n  getProfile: () => api.get(\"/api/students/my-profile/\"),\r\n  enrollInCourse: (courseId) => api.post(`/api/courses/${courseId}/enroll/`, {}),\r\n  getAllStudents: () => api.get(\"/api/students/\"),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}