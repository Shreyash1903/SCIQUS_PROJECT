{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport { coursesAPI } from '../services/api';\n\n/**\r\n * Custom hook for managing course search and filtering logic\r\n */\nexport const useCourseSearch = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [filters, setFilters] = useState({\n    is_active: \"\"\n  });\n  const [pagination, setPagination] = useState({\n    currentPage: 1,\n    totalPages: 1,\n    totalCount: 0\n  });\n\n  // Debounced search function\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState(searchTerm);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedSearchTerm(searchTerm);\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [searchTerm]);\n\n  // Memoized search parameters\n  const searchParams = useMemo(() => ({\n    page: pagination.currentPage,\n    search: debouncedSearchTerm,\n    ...filters\n  }), [pagination.currentPage, debouncedSearchTerm, filters]);\n\n  // Fetch courses function\n  const fetchCourses = useCallback(async (params = searchParams) => {\n    try {\n      setLoading(true);\n      setError(null);\n      console.log(\"🔍 Fetching courses with params:\", params);\n      const response = await coursesAPI.list(params);\n      console.log(\"📊 API Response:\", response.data);\n      setCourses(response.data.results || response.data || []);\n      if (response.data.count !== undefined) {\n        setPagination(prev => ({\n          ...prev,\n          totalCount: response.data.count,\n          totalPages: Math.ceil(response.data.count / 10)\n        }));\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"❌ Error fetching courses:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Failed to fetch courses');\n      setCourses([]);\n    } finally {\n      setLoading(false);\n    }\n  }, [searchParams]);\n\n  // Effect to fetch courses when search params change\n  useEffect(() => {\n    fetchCourses();\n  }, [fetchCourses]);\n\n  // Search handlers\n  const handleSearchChange = useCallback(value => {\n    console.log(\"🔎 Search term changed to:\", value);\n    setSearchTerm(value);\n    setPagination(prev => ({\n      ...prev,\n      currentPage: 1\n    })); // Reset to first page\n  }, []);\n  const handleFilterChange = useCallback((filterKey, value) => {\n    console.log(`🎛️ Filter ${filterKey} changed to:`, value);\n    setFilters(prev => ({\n      ...prev,\n      [filterKey]: value\n    }));\n    setPagination(prev => ({\n      ...prev,\n      currentPage: 1\n    })); // Reset to first page\n  }, []);\n  const handlePageChange = useCallback(page => {\n    setPagination(prev => ({\n      ...prev,\n      currentPage: page\n    }));\n  }, []);\n\n  // Clear search and filters\n  const clearSearch = useCallback(() => {\n    setSearchTerm(\"\");\n    setFilters({\n      is_active: \"\"\n    });\n    setPagination(prev => ({\n      ...prev,\n      currentPage: 1\n    }));\n  }, []);\n\n  // Refresh data\n  const refreshCourses = useCallback(() => {\n    fetchCourses();\n  }, [fetchCourses]);\n  return {\n    // Data\n    courses,\n    loading,\n    error,\n    // Search state\n    searchTerm,\n    filters,\n    pagination,\n    // Actions\n    handleSearchChange,\n    handleFilterChange,\n    handlePageChange,\n    clearSearch,\n    refreshCourses,\n    // Computed values\n    hasResults: courses.length > 0,\n    isEmpty: !loading && courses.length === 0,\n    hasFilters: searchTerm || filters.is_active\n  };\n};\n_s(useCourseSearch, \"5wQnUYfaL03BhYGW71RaXpiLyXI=\");","map":{"version":3,"names":["useState","useEffect","useCallback","useMemo","coursesAPI","useCourseSearch","_s","courses","setCourses","loading","setLoading","error","setError","searchTerm","setSearchTerm","filters","setFilters","is_active","pagination","setPagination","currentPage","totalPages","totalCount","debouncedSearchTerm","setDebouncedSearchTerm","timer","setTimeout","clearTimeout","searchParams","page","search","fetchCourses","params","console","log","response","list","data","results","count","undefined","prev","Math","ceil","err","_err$response","_err$response$data","detail","handleSearchChange","value","handleFilterChange","filterKey","handlePageChange","clearSearch","refreshCourses","hasResults","length","isEmpty","hasFilters"],"sources":["D:/Projects/SCIQUS Project/frontend/src/hooks/useCourseSearch.js"],"sourcesContent":["import { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { coursesAPI } from '../services/api';\r\n\r\n/**\r\n * Custom hook for managing course search and filtering logic\r\n */\r\nexport const useCourseSearch = () => {\r\n  const [courses, setCourses] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [filters, setFilters] = useState({\r\n    is_active: \"\",\r\n  });\r\n  const [pagination, setPagination] = useState({\r\n    currentPage: 1,\r\n    totalPages: 1,\r\n    totalCount: 0,\r\n  });\r\n\r\n  // Debounced search function\r\n  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState(searchTerm);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setDebouncedSearchTerm(searchTerm);\r\n    }, 300);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [searchTerm]);\r\n\r\n  // Memoized search parameters\r\n  const searchParams = useMemo(() => ({\r\n    page: pagination.currentPage,\r\n    search: debouncedSearchTerm,\r\n    ...filters,\r\n  }), [pagination.currentPage, debouncedSearchTerm, filters]);\r\n\r\n  // Fetch courses function\r\n  const fetchCourses = useCallback(async (params = searchParams) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      console.log(\"🔍 Fetching courses with params:\", params);\r\n      const response = await coursesAPI.list(params);\r\n      console.log(\"📊 API Response:\", response.data);\r\n      \r\n      setCourses(response.data.results || response.data || []);\r\n\r\n      if (response.data.count !== undefined) {\r\n        setPagination((prev) => ({\r\n          ...prev,\r\n          totalCount: response.data.count,\r\n          totalPages: Math.ceil(response.data.count / 10),\r\n        }));\r\n      }\r\n    } catch (err) {\r\n      console.error(\"❌ Error fetching courses:\", err);\r\n      setError(err.response?.data?.detail || 'Failed to fetch courses');\r\n      setCourses([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [searchParams]);\r\n\r\n  // Effect to fetch courses when search params change\r\n  useEffect(() => {\r\n    fetchCourses();\r\n  }, [fetchCourses]);\r\n\r\n  // Search handlers\r\n  const handleSearchChange = useCallback((value) => {\r\n    console.log(\"🔎 Search term changed to:\", value);\r\n    setSearchTerm(value);\r\n    setPagination(prev => ({ ...prev, currentPage: 1 })); // Reset to first page\r\n  }, []);\r\n\r\n  const handleFilterChange = useCallback((filterKey, value) => {\r\n    console.log(`🎛️ Filter ${filterKey} changed to:`, value);\r\n    setFilters(prev => ({ ...prev, [filterKey]: value }));\r\n    setPagination(prev => ({ ...prev, currentPage: 1 })); // Reset to first page\r\n  }, []);\r\n\r\n  const handlePageChange = useCallback((page) => {\r\n    setPagination(prev => ({ ...prev, currentPage: page }));\r\n  }, []);\r\n\r\n  // Clear search and filters\r\n  const clearSearch = useCallback(() => {\r\n    setSearchTerm(\"\");\r\n    setFilters({ is_active: \"\" });\r\n    setPagination(prev => ({ ...prev, currentPage: 1 }));\r\n  }, []);\r\n\r\n  // Refresh data\r\n  const refreshCourses = useCallback(() => {\r\n    fetchCourses();\r\n  }, [fetchCourses]);\r\n\r\n  return {\r\n    // Data\r\n    courses,\r\n    loading,\r\n    error,\r\n    \r\n    // Search state\r\n    searchTerm,\r\n    filters,\r\n    pagination,\r\n    \r\n    // Actions\r\n    handleSearchChange,\r\n    handleFilterChange,\r\n    handlePageChange,\r\n    clearSearch,\r\n    refreshCourses,\r\n    \r\n    // Computed values\r\n    hasResults: courses.length > 0,\r\n    isEmpty: !loading && courses.length === 0,\r\n    hasFilters: searchTerm || filters.is_active,\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}